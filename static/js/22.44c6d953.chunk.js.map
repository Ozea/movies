{"version":3,"sources":["utils/movies.js","components/Ribbon/index.js","components/Popular/ItemCard.js","components/Favorite/Movies.js","components/Favorite/TvShows.js","views/Main/Favorites.js"],"names":["formatMovieUrl","uri","originalImageBaseUrl","convertArrayIntoArrayOfArrays","data","dataLimit","subArrayLength","result","slice","forEach","item","index","array","newArray","length","push","useStyles","makeStyles","theme","ribbon","position","right","top","zIndex","overflow","width","height","textAlign","fontSize","fontWeight","color","textTransform","lineHeight","transform","display","background","boxShadow","content","left","borderLeft","borderRight","borderBottom","borderTop","Ribbon","props","classes","className","children","simmilarLink","flexDirection","margin","textDecoration","posterWrapper","transition","palette","simmilarPoster","backgroundSize","backgroundRepeat","backgroundPosition","PopularItemCard","type","isFavorite","isWatchLater","to","id","style","backgroundImage","poster_path","direction","paddingTop","paddingBottom","paddingLeft","Typography","variant","sx","pt","date","Date","dayjs","format","renderDate","Rating","name","value","Math","floor","vote_average","readOnly","FavoriteMoviesListing","favorites","useSelector","state","movies","marginTop","justifyContent","map","movie","FavoriteTvShowsListing","series","serie","root","orange","tab","indicator","backgroundColor","Popular","history","useHistory","useState","listing","setListing","useEffect","queryParams","QueryString","parse","location","search","ignoreQueryPrefix","list","includes","initListing","Helmet","xs","align","marginBottom","Tabs","onChange","event","val","centered","Tab","label","renderListing"],"mappings":"mGAAA,iFAEaA,EAAiB,SAAAC,GAC5B,MAAM,GAAN,OAAUC,KAAV,OAAiCD,IAGtBE,EAAgC,SAACC,GAA8C,IAAxCC,EAAuC,uDAA3B,GAAIC,EAAuB,uDAAN,EAC/EC,EAAS,GASb,OARAH,EAAKI,MAAM,EAAGH,GAAWI,SAAQ,SAACC,EAAMC,EAAOC,GAC7C,GAAID,EAAQL,IAAmB,GAAe,IAAVK,EAAa,CAC/C,IAAME,EAAWD,EAAMJ,MAAMG,EAAOA,EAAQL,GACxCO,EAASC,QACXP,EAAOQ,KAAKF,OAIXN,I,uHCbHS,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,OAAQ,CACNC,SAAU,WACVC,MAAO,OACPC,IAAK,OACLC,OAAQ,IACRC,SAAU,SACVC,MAAO,OACPC,OAAQ,OACRC,UAAW,QACX,WAAY,CACVC,SAAU,OACVC,WAAY,OACZC,MAAO,OACPC,cAAe,YACfJ,UAAW,SACXK,WAAY,OACZC,UAAW,gBACXR,MAAO,QACPS,QAAS,QACTC,WAAY,YACZC,UAAW,mCACXhB,SAAU,WACVE,IAAK,OACLD,MAAO,QACP,WAAY,CACVgB,QAAS,KACTjB,SAAU,WACVkB,KAAM,MACNhB,IAAK,OACLC,OAAQ,KACRgB,WAAY,sBACZC,YAAa,wBACbC,aAAc,wBACdC,UAAW,uBAEb,UAAW,CACTL,QAAS,KACTjB,SAAU,WACVC,MAAO,MACPC,IAAK,OACLC,OAAQ,KACRgB,WAAY,wBACZC,YAAa,sBACbC,aAAc,wBACdC,UAAW,6BAMJ,SAASC,EAAOC,GAC7B,IAAMC,EAAU7B,IAEhB,OACE,qBAAK8B,UAAWD,EAAQ1B,OAAxB,SACE,+BAAOyB,EAAMG,a,wCClDb/B,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrC8B,aAAc,CACZd,QAAS,OACTe,cAAe,SACfC,OAAQ,iBACR9B,SAAU,WACVK,MAAO,QACPC,OAAQ,OACRyB,eAAgB,QAElBC,cAAe,CACbhC,SAAU,WACVI,SAAU,SACV,sBAAuB,CACrB6B,WAAYnC,EAAMoC,QAAQD,YAE5B,4BAA6B,CAC3BpB,UAAW,gBAGfsB,eAAgB,CACdC,eAAgB,QAChBC,iBAAkB,YAClBC,mBAAoB,SACpBjC,MAAO,QACPC,OAAQ,aAIG,SAASiC,EAAT,GAA8E,IAAnDvD,EAAkD,EAAlDA,KAAkD,IAA5CwD,YAA4C,MAArC,QAAqC,EAA5BC,EAA4B,EAA5BA,WACxDhB,GADoF,EAAhBiB,aAC1D9C,KAchB,OACE,eAAC,IAAD,CAAM+C,GAAE,WAAe,UAATH,EAAmB,QAAU,KAAnC,YAA2CxD,EAAK4D,IAAMlB,UAAWD,EAAQG,aAAjF,UACGa,GAAc,cAAClB,EAAD,uBACf,qBAAKG,UAAWD,EAAQO,cAAxB,SACE,qBACEa,MAAO,CAAEC,gBAAgB,OAAD,OAASlE,YAAeI,EAAK+D,aAA7B,MACxBrB,UAAWD,EAAQU,mBAEvB,eAAC,IAAD,CAAea,UAAU,SAASC,WAAY,EAAGC,cAAe,EAAGC,YAAa,EAAhF,UACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAK3C,MAAM,gBAAgBuC,WAAY,EAA3D,SAA+DjE,EAAc,UAATwD,EAAmB,QAAU,UACjG,cAACY,EAAA,EAAD,CAAYC,QAAQ,YAAY3C,MAAM,QAAQuC,WAAY,EAAGK,GAAI,CAAEC,GAAI,IAAvE,SAtBa,WACjB,GAAa,UAATf,EAAkB,CACpB,IAAIgB,EAAOxE,EAAI,cAAoB,IAAIyE,KACvC,OAAOC,IAAMF,GAAMG,OAAO,iBACrB,GAAa,OAATnB,EAAe,CACxB,IAAIgB,EAAOxE,EAAI,gBAAsB,IAAIyE,KACzC,OAAOC,IAAMF,GAAMG,OAAO,iBAE1B,OAAOD,MAAQC,OAAO,iBAejBC,KAEH,cAACR,EAAA,EAAD,CAAYC,QAAQ,YAAY3C,MAAM,QAAQuC,WAAY,EAAGK,GAAI,CAAEC,GAAI,IAAvE,SACE,cAACM,EAAA,EAAD,CAAQC,KAAK,YAAYC,MAAOC,KAAKC,MAAMjF,EAAKkF,cAAgB,GAAK,EAAGC,UAAQ,WAbcnF,EAAK4D,M,0MChD9F,SAASwB,IAAyB,IACvCC,EAAcC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,UAAzCH,UAUR,OACE,cAAC,IAAD,CAAeI,UAAW,EAAGC,eAAe,SAA5C,SARKL,EAAU3E,OAER2E,EAAUM,KAAI,SAAAC,GACnB,OAAO,cAAC,IAAD,CAAiB5F,KAAM4F,GAAYA,EAAMhC,OAHpB,cAACQ,EAAA,EAAD,CAAYC,QAAQ,KAAK3C,MAAM,SAA/B,0CCJnB,SAASmE,IAA0B,IACxCR,EAAcC,aAAY,SAAAC,GAAK,OAAIA,EAAMO,UAAzCT,UAUR,OACE,cAAC,IAAD,CAAeI,UAAW,EAAGC,eAAe,SAA5C,SARKL,EAAU3E,OAER2E,EAAUM,KAAI,SAAAI,GACnB,OAAO,cAAC,IAAD,CAAiB/F,KAAM+F,EAAOvC,KAAK,MAAUuC,EAAMnC,OAH9B,cAACQ,EAAA,EAAD,CAAYC,QAAQ,KAAK3C,MAAM,SAA/B,4CCAlC,IAAMd,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCkF,KAAM,CACJ,kBAAmB,CACjBtE,MAAOZ,EAAMoC,QAAQ+C,SAGzBC,IAAK,CACHxE,MAAO,SAETyE,UAAW,CACTC,gBAAiBtF,EAAMoC,QAAQ+C,YAIpB,SAASI,IACtB,IAAM5D,EAAU7B,IACV0F,EAAUC,cAFgB,EAGFC,mBAAS,MAHP,mBAGzBC,EAHyB,KAGhBC,EAHgB,KAKhCC,qBAAU,WACR,IAAMC,EAAcC,IAAYC,MAAMR,EAAQS,SAASC,OAAQ,CAAEC,mBAAmB,IAEpF,GAAIL,EAAYM,KAAM,CACpB,IAAK,CAAC,QAAS,MAAMC,SAASP,EAAYM,MACxC,OAAOE,IAGT,IAAMrC,EAA6B,UAArB6B,EAAYM,KAAmB,EAAI,EACjDR,EAAW3B,QAEXqC,MAED,CAACd,IAEJ,IAAMc,EAAc,WAClBd,EAAQ3F,KAAK,yBACb+F,EAAW,IAqBb,OACE,qCACE,cAACW,EAAA,EAAD,UAAQ,8CAA6B,IAAZZ,EAAgB,WAAa,cACtD,eAAC,IAAD,CAAef,eAAe,SAASD,UAAW,EAAlD,UACE,cAAC,IAAD,CAAU6B,GAAI,GAAd,SACE,cAAClD,EAAA,EAAD,CAAYC,QAAQ,KAAKkD,MAAM,SAAS7F,MAAM,SAAS8F,aAAc,EAArE,wBAEF,cAAC,IAAD,CAAUF,GAAI,GAAd,SACE,cAACG,EAAA,EAAD,CACEhF,QAAS,CACPuD,KAAMvD,EAAQuD,KACdG,UAAW1D,EAAQ0D,WAErBpB,MAAO0B,GAAW,EAClBiB,SAxBO,SAACC,EAAOC,GACX,IAARA,EACFtB,EAAQ3F,KAAK,0BAEb2F,EAAQ3F,KAAK,sBAGf+F,EAAWkB,IAkBHC,UAAQ,EAPV,SAQG,CAAC,SAAU,YAAYlC,KAAI,SAAArF,GAAI,OAAI,cAACwH,EAAA,EAAD,CAAKpF,UAAWD,EAAQyD,IAAK6B,MAAOzH,GAAWA,aAlCvE,WACpB,GAAgB,OAAZmG,EAEJ,OAAgB,IAAZA,EAAsB,cAACZ,EAAD,IAEnB,cAACT,EAAD,IAkCJ4C","file":"static/js/22.44c6d953.chunk.js","sourcesContent":["import { originalImageBaseUrl } from \"services/api\";\n\nexport const formatMovieUrl = uri => {\n  return `${originalImageBaseUrl}${uri}`;\n}\n\nexport const convertArrayIntoArrayOfArrays = (data, dataLimit = 18, subArrayLength = 3) => {\n  let result = [];\n  data.slice(0, dataLimit).forEach((item, index, array) => {\n    if (index % subArrayLength === 0 || index === 0) {\n      const newArray = array.slice(index, index + subArrayLength);\n      if (newArray.length) {\n        result.push(newArray);\n      }\n    }\n  });\n  return result;\n}\n","import { makeStyles } from '@mui/styles';\nimport React from 'react';\n\nconst useStyles = makeStyles(theme => ({\n  ribbon: {\n    position: 'absolute',\n    right: '-5px',\n    top: '-5px',\n    zIndex: '1',\n    overflow: 'hidden',\n    width: '75px',\n    height: '75px',\n    textAlign: 'right',\n    \"& > span\": {\n      fontSize: '10px',\n      fontWeight: 'bold',\n      color: '#FFF',\n      textTransform: 'uppercase',\n      textAlign: 'center',\n      lineHeight: '20px',\n      transform: 'rotate(45deg)',\n      width: '100px',\n      display: 'block',\n      background: '#F2AA4Cff',\n      boxShadow: '0 3px 10px -5px rgba(0, 0, 0, 1)',\n      position: 'absolute',\n      top: '19px',\n      right: '-21px',\n      \"&:before\": {\n        content: \"''\",\n        position: 'absolute',\n        left: '0px',\n        top: '100%',\n        zIndex: '-1',\n        borderLeft: '3px solid #F2AA4Cff',\n        borderRight: '3px solid transparent',\n        borderBottom: '3px solid transparent',\n        borderTop: '3px solid #F2AA4Cff'\n      },\n      \"&:after\": {\n        content: \"''\",\n        position: 'absolute',\n        right: '0px',\n        top: '100%',\n        zIndex: '-1',\n        borderLeft: '3px solid transparent',\n        borderRight: '3px solid #F2AA4Cff',\n        borderBottom: '3px solid transparent',\n        borderTop: '3px solid #F2AA4Cff'\n      }\n    }\n  }\n}));\n\nexport default function Ribbon(props) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.ribbon}>\n      <span>{props.children}</span>\n    </div>\n  );\n}\n","import { Rating, Typography } from '@mui/material';\nimport { makeStyles } from '@mui/styles';\nimport { GridContainer } from 'components';\nimport Ribbon from 'components/Ribbon';\nimport dayjs from 'dayjs';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { formatMovieUrl } from 'utils/movies';\n\nconst useStyles = makeStyles(theme => ({\n  simmilarLink: {\n    display: 'flex',\n    flexDirection: 'column',\n    margin: '0 auto 1.75rem',\n    position: 'relative',\n    width: '250px',\n    height: '100%',\n    textDecoration: 'none'\n  },\n  posterWrapper: {\n    position: 'relative',\n    overflow: 'hidden',\n    \"& > $simmilarPoster\": {\n      transition: theme.palette.transition\n    },\n    \"&:hover > $simmilarPoster\": {\n      transform: 'scale(1.05)'\n    }\n  },\n  simmilarPoster: {\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center',\n    width: '250px',\n    height: '400px'\n  }\n}));\n\nexport default function PopularItemCard({ data, type = \"movie\", isFavorite, isWatchLater }) {\n  const classes = useStyles();\n\n  const renderDate = () => {\n    if (type === \"movie\") {\n      let date = data['release_date'] || new Date();\n      return dayjs(date).format(\"MMMM DD, YYYY\");\n    } else if (type === \"tv\") {\n      let date = data['first_air_date'] || new Date();\n      return dayjs(date).format(\"MMMM DD, YYYY\");\n    } else {\n      return dayjs().format(\"MMMM DD, YYYY\");\n    }\n  }\n\n  return (\n    <Link to={`/${type === \"movie\" ? \"movie\" : \"tv\"}/${data.id}`} className={classes.simmilarLink} key={data.id}>\n      {isFavorite && <Ribbon>Favorite</Ribbon>}\n      <div className={classes.posterWrapper}>\n        <div\n          style={{ backgroundImage: `url(${formatMovieUrl(data.poster_path)})` }}\n          className={classes.simmilarPoster} />\n      </div>\n      <GridContainer direction=\"column\" paddingTop={2} paddingBottom={2} paddingLeft={1}>\n        <Typography variant=\"h4\" color=\"textSecondary\" paddingTop={2}>{data[type === \"movie\" ? 'title' : 'name']}</Typography>\n        <Typography variant=\"subtitle1\" color=\"white\" paddingTop={2} sx={{ pt: .5 }}>\n          {renderDate()}\n        </Typography>\n        <Typography variant=\"subtitle2\" color=\"white\" paddingTop={2} sx={{ pt: .5 }}>\n          <Rating name=\"read-only\" value={Math.floor(data.vote_average) / 2 || 1} readOnly />\n        </Typography>\n      </GridContainer>\n    </Link>\n  );\n}\n","import React from 'react';\nimport { GridContainer } from 'components';\nimport PopularItemCard from 'components/Popular/ItemCard';\nimport { Typography } from '@mui/material';\nimport { useSelector } from 'react-redux';\n\nexport default function FavoriteMoviesListing() {\n  const { favorites } = useSelector(state => state.movies);\n\n  const renderMovies = () => {\n    if (!favorites.length) return <Typography variant=\"h3\" color=\"orange\">No favorite movies so far!</Typography>;\n\n    return favorites.map(movie => {\n      return <PopularItemCard data={movie} key={movie.id} />;\n    });\n  }\n\n  return (\n    <GridContainer marginTop={5} justifyContent=\"center\">\n      {renderMovies()}\n    </GridContainer>\n  );\n}\n","import React from 'react';\nimport { GridContainer } from 'components';\nimport PopularItemCard from 'components/Popular/ItemCard';\nimport { Typography } from '@mui/material';\nimport { useSelector } from 'react-redux';\n\nexport default function FavoriteTvShowsListing() {\n  const { favorites } = useSelector(state => state.series);\n\n  const renderTvShows = () => {\n    if (!favorites.length) return <Typography variant=\"h3\" color=\"orange\">No favorite tv shows so far!</Typography>;\n\n    return favorites.map(serie => {\n      return <PopularItemCard data={serie} type=\"tv\" key={serie.id} />;\n    });\n  }\n\n  return (\n    <GridContainer marginTop={5} justifyContent=\"center\">\n      {renderTvShows()}\n    </GridContainer>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { Tab, Tabs, Typography } from '@mui/material';\nimport { GridContainer, GridItem } from 'components';\nimport { makeStyles } from '@mui/styles';\nimport { Helmet } from 'react-helmet';\nimport QueryString from 'query-string';\nimport { useHistory } from 'react-router-dom';\nimport FavoriteMoviesListing from 'components/Favorite/Movies';\nimport FavoriteTvShowsListing from 'components/Favorite/TvShows';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"& .Mui-selected\": {\n      color: theme.palette.orange\n    }\n  },\n  tab: {\n    color: 'white'\n  },\n  indicator: {\n    backgroundColor: theme.palette.orange\n  }\n}));\n\nexport default function Popular() {\n  const classes = useStyles();\n  const history = useHistory();\n  const [listing, setListing] = useState(null);\n\n  useEffect(() => {\n    const queryParams = QueryString.parse(history.location.search, { ignoreQueryPrefix: true });\n\n    if (queryParams.list) {\n      if (!['movie', 'tv'].includes(queryParams.list)) {\n        return initListing();\n      }\n\n      const value = queryParams.list === \"movie\" ? 0 : 1;\n      setListing(value);\n    } else {\n      initListing();\n    }\n  }, [history]);\n\n  const initListing = () => {\n    history.push('/favorites?list=movie');\n    setListing(0);\n  }\n\n  const renderListing = () => {\n    if (listing === null) return;\n\n    if (listing === 1) return <FavoriteTvShowsListing />;\n\n    return <FavoriteMoviesListing />;\n  }\n\n  const onChange = (event, val) => {\n    if (val === 0) {\n      history.push('/favorites?list=movies');\n    } else {\n      history.push('/favorites?list=tv');\n    }\n\n    setListing(val);\n  }\n\n  return (\n    <>\n      <Helmet><title>Favorite {listing === 1 ? 'tv shows' : 'movies'}</title></Helmet>\n      <GridContainer justifyContent=\"center\" marginTop={3}>\n        <GridItem xs={12}>\n          <Typography variant='h2' align='center' color=\"orange\" marginBottom={1}>Favorite</Typography>\n        </GridItem>\n        <GridItem xs={12}>\n          <Tabs\n            classes={{\n              root: classes.root,\n              indicator: classes.indicator\n            }}\n            value={listing || 0}\n            onChange={onChange}\n            centered>\n            {[\"Movies\", \"TV shows\"].map(item => <Tab className={classes.tab} label={item} key={item} />)}\n          </Tabs>\n        </GridItem>\n      </GridContainer>\n\n      {renderListing()}\n    </>\n  );\n}\n"],"sourceRoot":""}