{"version":3,"sources":["utils/movies.js","components/Ribbon/index.js","components/Popular/ItemCard.js","assets/jss/movieByGenreStyles.js","components/Search/SearchMoviesListing.js","components/Search/TvListing.js","views/Main/Search.js"],"names":["formatMovieUrl","uri","originalImageBaseUrl","convertArrayIntoArrayOfArrays","data","dataLimit","subArrayLength","result","slice","forEach","item","index","array","newArray","length","push","useStyles","makeStyles","theme","ribbon","position","right","top","zIndex","overflow","width","height","textAlign","fontSize","fontWeight","color","textTransform","lineHeight","transform","display","background","boxShadow","content","left","borderLeft","borderRight","borderBottom","borderTop","Ribbon","props","classes","className","children","simmilarLink","flexDirection","margin","textDecoration","posterWrapper","transition","palette","simmilarPoster","backgroundSize","backgroundRepeat","backgroundPosition","PopularItemCard","type","isFavorite","isWatchLater","to","id","style","backgroundImage","poster_path","direction","paddingTop","paddingBottom","paddingLeft","Typography","variant","sx","pt","date","Date","dayjs","format","renderDate","Rating","name","value","Math","floor","vote_average","readOnly","moviesByGenreStyles","movieBackground","filter","listingWrapper","backgroundColor","primary","dark","shadow","borderRadius","movieDetailsWrapper","mainMovieContainer","mainShadow","listItem","spacing","padding","poster","loadMoreButton","genre","marginRight","icon","marginBottom","genreText","clickableCard","cursor","cardActionButton","SearchMoviesListing","query","useState","loading","setLoading","loadingMore","setLoadingMore","favorites","useSelector","state","movies","page","setPage","setData","useEffect","fetchData","then","res","Promise","rej","searchMovies","prev","prevData","results","catch","err","console","error","marginTop","Array","from","map","Skeleton","movie","find","fav","justifyContent","CustomButton","title","alignItems","CircularProgress","size","marginLeft","disabled","onClick","buttonClassName","SearchTvListing","series","searchTv","tv","root","orange","tab","indicator","Search","history","useHistory","listing","setListing","searchTerm","setSearchTerm","queryParams","QueryString","parse","location","search","ignoreQueryPrefix","list","whitelistParams","includes","initListing","indexOf","Helmet","xs","align","Tabs","onChange","event","val","centered","Tab","label","renderListing"],"mappings":"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","file":"static/js/19.55445d6c.chunk.js","sourcesContent":["import { originalImageBaseUrl } from \"services/api\";\n\nexport const formatMovieUrl = uri => {\n  return `${originalImageBaseUrl}${uri}`;\n}\n\nexport const convertArrayIntoArrayOfArrays = (data, dataLimit = 18, subArrayLength = 3) => {\n  let result = [];\n  data.slice(0, dataLimit).forEach((item, index, array) => {\n    if (index % subArrayLength === 0 || index === 0) {\n      const newArray = array.slice(index, index + subArrayLength);\n      if (newArray.length) {\n        result.push(newArray);\n      }\n    }\n  });\n  return result;\n}\n","import { makeStyles } from '@mui/styles';\nimport React from 'react';\n\nconst useStyles = makeStyles(theme => ({\n  ribbon: {\n    position: 'absolute',\n    right: '-5px',\n    top: '-5px',\n    zIndex: '1',\n    overflow: 'hidden',\n    width: '75px',\n    height: '75px',\n    textAlign: 'right',\n    \"& > span\": {\n      fontSize: '10px',\n      fontWeight: 'bold',\n      color: '#FFF',\n      textTransform: 'uppercase',\n      textAlign: 'center',\n      lineHeight: '20px',\n      transform: 'rotate(45deg)',\n      width: '100px',\n      display: 'block',\n      background: '#F2AA4Cff',\n      boxShadow: '0 3px 10px -5px rgba(0, 0, 0, 1)',\n      position: 'absolute',\n      top: '19px',\n      right: '-21px',\n      \"&:before\": {\n        content: \"''\",\n        position: 'absolute',\n        left: '0px',\n        top: '100%',\n        zIndex: '-1',\n        borderLeft: '3px solid #F2AA4Cff',\n        borderRight: '3px solid transparent',\n        borderBottom: '3px solid transparent',\n        borderTop: '3px solid #F2AA4Cff'\n      },\n      \"&:after\": {\n        content: \"''\",\n        position: 'absolute',\n        right: '0px',\n        top: '100%',\n        zIndex: '-1',\n        borderLeft: '3px solid transparent',\n        borderRight: '3px solid #F2AA4Cff',\n        borderBottom: '3px solid transparent',\n        borderTop: '3px solid #F2AA4Cff'\n      }\n    }\n  }\n}));\n\nexport default function Ribbon(props) {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.ribbon}>\n      <span>{props.children}</span>\n    </div>\n  );\n}\n","import { Rating, Typography } from '@mui/material';\nimport { makeStyles } from '@mui/styles';\nimport { GridContainer } from 'components';\nimport Ribbon from 'components/Ribbon';\nimport dayjs from 'dayjs';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { formatMovieUrl } from 'utils/movies';\n\nconst useStyles = makeStyles(theme => ({\n  simmilarLink: {\n    display: 'flex',\n    flexDirection: 'column',\n    margin: '0 auto 1.75rem',\n    position: 'relative',\n    width: '250px',\n    height: '100%',\n    textDecoration: 'none'\n  },\n  posterWrapper: {\n    position: 'relative',\n    overflow: 'hidden',\n    \"& > $simmilarPoster\": {\n      transition: theme.palette.transition\n    },\n    \"&:hover > $simmilarPoster\": {\n      transform: 'scale(1.05)'\n    }\n  },\n  simmilarPoster: {\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center',\n    width: '250px',\n    height: '400px'\n  }\n}));\n\nexport default function PopularItemCard({ data, type = \"movie\", isFavorite, isWatchLater }) {\n  const classes = useStyles();\n\n  const renderDate = () => {\n    if (type === \"movie\") {\n      let date = data['release_date'] || new Date();\n      return dayjs(date).format(\"MMMM DD, YYYY\");\n    } else if (type === \"tv\") {\n      let date = data['first_air_date'] || new Date();\n      return dayjs(date).format(\"MMMM DD, YYYY\");\n    } else {\n      return dayjs().format(\"MMMM DD, YYYY\");\n    }\n  }\n\n  return (\n    <Link to={`/${type === \"movie\" ? \"movie\" : \"tv\"}/${data.id}`} className={classes.simmilarLink} key={data.id}>\n      {isFavorite && <Ribbon>Favorite</Ribbon>}\n      <div className={classes.posterWrapper}>\n        <div\n          style={{ backgroundImage: `url(${formatMovieUrl(data.poster_path)})` }}\n          className={classes.simmilarPoster} />\n      </div>\n      <GridContainer direction=\"column\" paddingTop={2} paddingBottom={2} paddingLeft={1}>\n        <Typography variant=\"h4\" color=\"textSecondary\" paddingTop={2}>{data[type === \"movie\" ? 'title' : 'name']}</Typography>\n        <Typography variant=\"subtitle1\" color=\"white\" paddingTop={2} sx={{ pt: .5 }}>\n          {renderDate()}\n        </Typography>\n        <Typography variant=\"subtitle2\" color=\"white\" paddingTop={2} sx={{ pt: .5 }}>\n          <Rating name=\"read-only\" value={Math.floor(data.vote_average) / 2 || 1} readOnly />\n        </Typography>\n      </GridContainer>\n    </Link>\n  );\n}\n","export const moviesByGenreStyles = theme => ({\n  movieBackground: {\n    backgroundRepeat: 'no-repeat',\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n    height: '400px',\n    filter: 'blur(10px)'\n  },\n  listingWrapper: {\n    paddingTop: '1rem',\n    backgroundColor: theme.palette.primary.dark,\n    width: '70%',\n    margin: '-7.5rem 1rem 1rem',\n    zIndex: '15',\n    boxShadow: theme.palette.shadow,\n    borderRadius: '5px 5px 0 0'\n  },\n  movieDetailsWrapper: {\n    position: 'unset',\n    width: '75%',\n  },\n  mainMovieContainer: {\n    position: 'absolute',\n    width: '65%',\n    height: '100%'\n  },\n  mainShadow: {\n    zIndex: 99,\n    borderTop: '1px solid #34415b',\n    boxShadow: '0px 1px 20px 4px #202839'\n  },\n  listItem: {\n    overflow: 'hidden',\n    backgroundColor: '#252E42',\n    margin: theme.spacing(1, 0, 2.5),\n    padding: '0',\n    borderRadius: '10px 0 0 10px',\n    boxShadow: '2px 4px 10px 3px #202839'\n  },\n  poster: {\n    height: '300px',\n    width: '200px',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center',\n    backgroundSize: 'cover',\n    transition: '.5s all ease'\n  },\n  posterWrapper: {\n    overflow: 'hidden',\n    margin: '0'\n  },\n  loadMoreButton: {\n    padding: theme.spacing(1, 3),\n    '& p': {\n      fontSize: '16px'\n    }\n  },\n  genre: {\n    marginRight: theme.spacing(1.5),\n    padding: theme.spacing(.25, 2),\n    borderRadius: '7px',\n    background: theme.palette.icon,\n    textDecoration: 'none',\n    marginBottom: '5px'\n  },\n  genreText: {\n    fontSize: '10px',\n    lineHeight: '17px',\n    fontWeight: 'bolder',\n    textDecoration: 'none',\n    textTransform: 'uppercase'\n  },\n  clickableCard: {\n    cursor: 'pointer',\n    '&:hover $poster': {\n      transform: 'scale(1.05)'\n    }\n  },\n  cardActionButton: {\n    fontSize: '15px',\n    marginRight: theme.spacing(1.5)\n  }\n});","import { CircularProgress, Skeleton } from '@mui/material';\nimport { GridItem } from 'components';\nimport { GridContainer } from 'components';\nimport CustomButton from 'components/CustomButton';\nimport PopularItemCard from 'components/Popular/ItemCard';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { moviesByGenreStyles } from 'assets/jss/movieByGenreStyles';\nimport { makeStyles } from '@mui/styles';\nimport { searchMovies } from 'services/api';\n\nconst useStyles = makeStyles(theme => ({\n  ...moviesByGenreStyles(theme).loadMoreButton\n}));\n\nexport default function SearchMoviesListing({ query }) {\n  const classes = useStyles();\n  const [loading, setLoading] = useState(false);\n  const [loadingMore, setLoadingMore] = useState(false);\n  const { favorites } = useSelector(state => state.movies);\n  const [page, setPage] = useState(1);\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    setLoading(true);\n    fetchData().then(res => {\n      setLoading(false);\n    });\n  }, []);\n\n  const fetchData = () => {\n    return new Promise((res, rej) => searchMovies(query, page)\n      .then(result => {\n        setPage(prev => prev += 1);\n        setData(prevData => [...prevData, ...result.data.results]);\n        res();\n      })\n      .catch(err => console.error(err)));\n  }\n\n  const renderMovies = () => {\n    return data.filter(item => item.poster_path).map(movie => {\n      const isFavorite = favorites.find(fav => fav.id === movie.id);\n      return <PopularItemCard data={movie} isFavorite={isFavorite} key={movie.id} />;\n    });\n  }\n\n  const renderLoadingSpinner = () => {\n    return Array.from(Array(10)).map((item, index) =>\n      <Skeleton\n        width={250}\n        height={400}\n        key={index}\n        style={{\n          transform: 'unset',\n          margin: '0 auto 1.75rem'\n        }} />);\n  }\n\n  const fetchMoreMoviesHandler = () => {\n    setLoadingMore(true);\n    fetchData().then(res => {\n      setLoadingMore(false);\n    });\n  }\n\n  return (\n    <GridContainer marginTop={5}>\n      {loading\n        ? renderLoadingSpinner()\n        : <>\n          {renderMovies()}\n\n          <GridContainer justifyContent=\"center\">\n            <GridItem marginBottom={1} marginTop={4}>\n              <CustomButton\n                title={\n                  loadingMore\n                    ? <GridContainer alignItems=\"center\">\n                      <>Load more</>\n                      <CircularProgress size={15} style={{ marginLeft: '.5rem' }} color=\"white\" />\n                    </GridContainer>\n                    : \"Load more\"\n                }\n                disabled={loadingMore}\n                onClick={fetchMoreMoviesHandler}\n                buttonClassName={classes.loadMoreButton} />\n            </GridItem>\n          </GridContainer>\n        </>}\n    </GridContainer>\n  );\n}\n","import { CircularProgress, Skeleton } from '@mui/material';\nimport { GridItem } from 'components';\nimport { GridContainer } from 'components';\nimport CustomButton from 'components/CustomButton';\nimport PopularItemCard from 'components/Popular/ItemCard';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { moviesByGenreStyles } from 'assets/jss/movieByGenreStyles';\nimport { makeStyles } from '@mui/styles';\nimport { searchTv } from 'services/api';\n\nconst useStyles = makeStyles(theme => ({\n  ...moviesByGenreStyles(theme).loadMoreButton\n}));\n\nexport default function SearchTvListing({ query }) {\n  const classes = useStyles();\n  const [loading, setLoading] = useState(false);\n  const [loadingMore, setLoadingMore] = useState(false);\n  const { favorites } = useSelector(state => state.series);\n  const [page, setPage] = useState(1);\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    setLoading(true);\n    fetchData().then(res => {\n      setLoading(false);\n    });\n  }, []);\n\n  const fetchData = () => {\n    return new Promise((res, rej) => searchTv(query, page)\n      .then(result => {\n        setPage(prev => prev += 1);\n        setData(result.data.results);\n        res();\n      })\n      .catch(err => console.error(err)));\n  }\n\n  const renderMovies = () => {\n    return data.filter(item => item.poster_path).map(tv => {\n      const isFavorite = favorites.find(fav => fav.id === tv.id);\n      return <PopularItemCard data={tv} type=\"tv\" isFavorite={isFavorite} key={tv.id} />;\n    });\n  }\n\n  const renderLoadingSpinner = () => {\n    return Array.from(Array(10)).map((item, index) =>\n      <Skeleton\n        width={250}\n        height={400}\n        key={index}\n        style={{\n          transform: 'unset',\n          margin: '0 auto 1.75rem'\n        }} />);\n  }\n\n  const fetchMoreMoviesHandler = () => {\n    setLoadingMore(true);\n    fetchData().then(res => {\n      setLoadingMore(false);\n    });\n  }\n\n  return (\n    <GridContainer marginTop={5}>\n      {loading\n        ? renderLoadingSpinner()\n        : <>\n          {renderMovies()}\n\n          <GridContainer justifyContent=\"center\">\n            <GridItem marginBottom={1} marginTop={4}>\n              <CustomButton\n                title={\n                  loadingMore\n                    ? <GridContainer alignItems=\"center\">\n                      <>Load more</>\n                      <CircularProgress size={15} style={{ marginLeft: '.5rem' }} color=\"white\" />\n                    </GridContainer>\n                    : \"Load more\"\n                }\n                disabled={loadingMore}\n                onClick={fetchMoreMoviesHandler}\n                buttonClassName={classes.loadMoreButton} />\n            </GridItem>\n          </GridContainer>\n        </>}\n    </GridContainer>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { Tab, Tabs, Typography } from '@mui/material';\nimport { GridContainer, GridItem } from 'components';\nimport { makeStyles } from '@mui/styles';\nimport { Helmet } from 'react-helmet';\nimport QueryString from 'query-string';\nimport { useHistory } from 'react-router-dom';\nimport SearchMoviesListing from 'components/Search/SearchMoviesListing';\nimport SearchTvListing from 'components/Search/TvListing';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"& .Mui-selected\": {\n      color: theme.palette.orange\n    }\n  },\n  tab: {\n    color: 'white'\n  },\n  indicator: {\n    backgroundColor: theme.palette.orange\n  }\n}));\n\nexport default function Search() {\n  const classes = useStyles();\n  const history = useHistory();\n  const [listing, setListing] = useState(null);\n  const [searchTerm, setSearchTerm] = useState(null);\n\n  useEffect(() => {\n    const queryParams = QueryString.parse(history.location.search, { ignoreQueryPrefix: true });\n\n    if (!queryParams.query || queryParams.query === \"null\") {\n      history.push('/');\n      return;\n    }\n\n    setSearchTerm(queryParams.query);\n\n    if (queryParams.list) {\n      const whitelistParams = ['movie', 'tv', 'person'];\n      if (!whitelistParams.includes(queryParams.list)) {\n        return initListing();\n      }\n\n      const value = queryParams.list === \"movie\" ? 0 : whitelistParams.indexOf(queryParams.list);\n      setListing(value);\n    } else {\n      initListing();\n    }\n  }, [history]);\n\n  const initListing = () => {\n    history.push(`/search?list=movie&query=${searchTerm}`);\n    setListing(0);\n  }\n\n  const renderListing = () => {\n    if (listing === null) return;\n\n    if (listing === 1) return <SearchTvListing query={searchTerm} />;\n\n    return <SearchMoviesListing query={searchTerm} />;\n  }\n\n  const onChange = (event, val) => {\n    if (val === 0) {\n      history.push(`/search?list=movies&query=${searchTerm}`);\n    } else {\n      history.push(`/search?list=tv&query=${searchTerm}`);\n    }\n\n    setListing(val);\n  }\n\n  return (\n    <>\n      <Helmet><title>Search</title></Helmet>\n      <GridContainer justifyContent=\"center\" marginTop={3}>\n        <GridItem xs={12}>\n          <Typography variant='h2' align='center' color=\"orange\" marginBottom={1}>Found</Typography>\n        </GridItem>\n        <GridItem xs={12}>\n          <Tabs\n            classes={{\n              root: classes.root,\n              indicator: classes.indicator\n            }}\n            value={listing || 0}\n            onChange={onChange}\n            centered>\n            {[\"Movies\", \"TV shows\"].map(item => <Tab className={classes.tab} label={item} key={item} />)}\n          </Tabs>\n        </GridItem>\n      </GridContainer>\n\n      {renderListing()}\n    </>\n  );\n}\n"],"sourceRoot":""}